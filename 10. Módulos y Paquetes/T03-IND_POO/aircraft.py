######################################
#       David Fernández Fuster       #
#       13/03/2021                   #
######################################
"""Este módulo incluye la definición para poder representar aviones.

    Classes:
        Aircraft
"""

class Aircraft:
    """Representación de un avión.

        Attributes:
            registration (str): Matricula del avión.
            model (str): Modelo del avión.
            num_rows (int): Número de filas de asientos en el avión.
            num_seats_per_row (int): Número de asientos por fila en el avión. 

        Getters:
            get_registration()
            get_model()

        Methods:
            seating_plan(): Genera un plan de asientos para el número de filas y de asientos por filas.
            num_seats(): Calcula el número de asientos. 
    """
    #-----------------------------------------------------------------------------------------------------------
    #-----------------------------------------------------------------------------------------------------------
    def __init__(self, registration, model, num_rows, num_seats_per_row):
        self.__registration = registration
        self.__model = model
        self.__num_rows = num_rows
        self.__num_seats_per_row = num_seats_per_row
    # ()
    #-----------------------------------------------------------------------------------------------------------
    #-----------------------------------------------------------------------------------------------------------
    
    #-----------------------------------------------------------------------------------------------------------
    # Getters
    #-----------------------------------------------------------------------------------------------------------
    def get_registration(self):
        return self.__registration
    # ()

    def get_model(self):
        return self.__model
    # ()
    #-----------------------------------------------------------------------------------------------------------
    #-----------------------------------------------------------------------------------------------------------

    #-----------------------------------------------------------------------------------------------------------
    # Métodos
    #-----------------------------------------------------------------------------------------------------------    
    def seating_plan(self):
        """Genera un plan de asientos para el número de filas y de asientos por filas.

            Returns:
                seating_plan (list): Plan de asientos.
        """
        #-----------------------------------------------------------------------------------------------------------
        # Definir Filas y Asientos
        #-----------------------------------------------------------------------------------------------------------
        rows = []
        i = 1
        
        while i <= self.__num_rows:
            rows.append(i)
            i+=1
        
        seats = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
        rows_and_seats = (rows, seats[:self.__num_seats_per_row])
        #-----------------------------------------------------------------------------------------------------------
        #-----------------------------------------------------------------------------------------------------------
        
        #-----------------------------------------------------------------------------------------------------------
        # Generar Plan de Asientos
        #-----------------------------------------------------------------------------------------------------------
        seating_plan = [None]
        seats = {}
        seats_of_a_row = {} 
        
        for row in rows_and_seats[0]:
            for seat in rows_and_seats[1]:
                seats[seat] = None
            # for()
            seating_plan.append(seats)
        # for()
        #-----------------------------------------------------------------------------------------------------------
        #-----------------------------------------------------------------------------------------------------------
        return seating_plan
    # ()
    #-----------------------------------------------------------------------------------------------------------
    #-----------------------------------------------------------------------------------------------------------
    
    #-----------------------------------------------------------------------------------------------------------
    #-----------------------------------------------------------------------------------------------------------
    def num_seats(self):
        """Calcula el número de asientos.

            Returns:
                num_seats (int): El número de asientos.
        """
        num_seats = self.__num_seats_per_row * self.__num_rows
        return num_seats
    # ()
    #-----------------------------------------------------------------------------------------------------------
    #-----------------------------------------------------------------------------------------------------------
# class()
#-----------------------------------------------------------------------------------------------------------
#-----------------------------------------------------------------------------------------------------------
class Airbus(Aircraft):
    """Representación de un avión del tipo Airbus.

        Args:
            Aircraft (class): Características básicas del avión.

        Attributes:
            variant (str): Variante del Airbus.

        Getters:
            get_variant()
    """
    #-----------------------------------------------------------------------------------------------------------
    #-----------------------------------------------------------------------------------------------------------
    def __init__(self, registration, variant):
        super().__init__(registration, "Airbus A319", 23, 6)
        self.__variant = variant
    # ()
    #-----------------------------------------------------------------------------------------------------------
    #-----------------------------------------------------------------------------------------------------------

    #-----------------------------------------------------------------------------------------------------------
    # Getters
    #-----------------------------------------------------------------------------------------------------------
    def get_variant():
        return self.__variant
    # ()
    #-----------------------------------------------------------------------------------------------------------
    #-----------------------------------------------------------------------------------------------------------
# class()
#-----------------------------------------------------------------------------------------------------------
#-----------------------------------------------------------------------------------------------------------
class Boeing(Aircraft):
    """Representación de un avión del tipo Boeing.

        Args:
            Aircraft (class): Avión del tipo Boeing.

        Attributes:
            airline (str): Aerolínea.

        Getters:
            get_airline()
    """
    #-----------------------------------------------------------------------------------------------------------
    #-----------------------------------------------------------------------------------------------------------
    def __init__(self, registration, airline):
        super().__init__(registration, "Boeing 777", 56, 9)
        self.__airline = airline
    # ()
    #-----------------------------------------------------------------------------------------------------------
    #-----------------------------------------------------------------------------------------------------------    
    
    #-----------------------------------------------------------------------------------------------------------
    # Getter
    #-----------------------------------------------------------------------------------------------------------
    def get_airline():
        return self.__airline
    # ()
    #-----------------------------------------------------------------------------------------------------------
    #-----------------------------------------------------------------------------------------------------------
# class()
#-----------------------------------------------------------------------------------------------------------
#-----------------------------------------------------------------------------------------------------------